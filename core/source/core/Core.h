#pragma once

#include <cstddef>
namespace crbn
{

void start_sim();

typedef double coord_type; 

struct pos
{
    coord_type x, y;
};

struct particle_2d
{
    double _mass;
    double _vel_y;
    double _vel_x;
    pos _pos;
};


class Uniform_Sphere_Sim_2d
{
public: // Public callable functions :

    // Called to run a single "frame" of the simulation.
    // Maby it will be async?
    void runAsync(float elapsedTime);
    // Gets the coord buf generated by the current async process.
    // If the async Thread isnt finished, then it will stall till it is
    coord_type* getCoordBuf();

    Uniform_Sphere_Sim_2d();
    ~Uniform_Sphere_Sim_2d();


//private: // Member Variables
    coord_type* _coordinate_array;
    std::size_t _coordinate_array_size;
    bool _coords_ready = false;
    particle_2d particle;
    coord_type tempmod;

private: // Member Functions


};

}
